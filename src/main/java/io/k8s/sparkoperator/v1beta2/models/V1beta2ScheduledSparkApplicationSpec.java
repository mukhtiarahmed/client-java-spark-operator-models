/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.22.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.k8s.sparkoperator.v1beta2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplate;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * V1beta2ScheduledSparkApplicationSpec
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-04-05T08:55:35.785Z[Etc/UTC]")
public class V1beta2ScheduledSparkApplicationSpec {
  public static final String SERIALIZED_NAME_CONCURRENCY_POLICY = "concurrencyPolicy";
  @SerializedName(SERIALIZED_NAME_CONCURRENCY_POLICY)
  private String concurrencyPolicy;

  public static final String SERIALIZED_NAME_FAILED_RUN_HISTORY_LIMIT = "failedRunHistoryLimit";
  @SerializedName(SERIALIZED_NAME_FAILED_RUN_HISTORY_LIMIT)
  private Integer failedRunHistoryLimit;

  public static final String SERIALIZED_NAME_SCHEDULE = "schedule";
  @SerializedName(SERIALIZED_NAME_SCHEDULE)
  private String schedule;

  public static final String SERIALIZED_NAME_SUCCESSFUL_RUN_HISTORY_LIMIT = "successfulRunHistoryLimit";
  @SerializedName(SERIALIZED_NAME_SUCCESSFUL_RUN_HISTORY_LIMIT)
  private Integer successfulRunHistoryLimit;

  public static final String SERIALIZED_NAME_SUSPEND = "suspend";
  @SerializedName(SERIALIZED_NAME_SUSPEND)
  private Boolean suspend;

  public static final String SERIALIZED_NAME_TEMPLATE = "template";
  @SerializedName(SERIALIZED_NAME_TEMPLATE)
  private V1beta2ScheduledSparkApplicationSpecTemplate template;


  public V1beta2ScheduledSparkApplicationSpec concurrencyPolicy(String concurrencyPolicy) {
    
    this.concurrencyPolicy = concurrencyPolicy;
    return this;
  }

   /**
   * Get concurrencyPolicy
   * @return concurrencyPolicy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getConcurrencyPolicy() {
    return concurrencyPolicy;
  }


  public void setConcurrencyPolicy(String concurrencyPolicy) {
    this.concurrencyPolicy = concurrencyPolicy;
  }


  public V1beta2ScheduledSparkApplicationSpec failedRunHistoryLimit(Integer failedRunHistoryLimit) {
    
    this.failedRunHistoryLimit = failedRunHistoryLimit;
    return this;
  }

   /**
   * Get failedRunHistoryLimit
   * @return failedRunHistoryLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getFailedRunHistoryLimit() {
    return failedRunHistoryLimit;
  }


  public void setFailedRunHistoryLimit(Integer failedRunHistoryLimit) {
    this.failedRunHistoryLimit = failedRunHistoryLimit;
  }


  public V1beta2ScheduledSparkApplicationSpec schedule(String schedule) {
    
    this.schedule = schedule;
    return this;
  }

   /**
   * Get schedule
   * @return schedule
  **/
  @ApiModelProperty(required = true, value = "")

  public String getSchedule() {
    return schedule;
  }


  public void setSchedule(String schedule) {
    this.schedule = schedule;
  }


  public V1beta2ScheduledSparkApplicationSpec successfulRunHistoryLimit(Integer successfulRunHistoryLimit) {
    
    this.successfulRunHistoryLimit = successfulRunHistoryLimit;
    return this;
  }

   /**
   * Get successfulRunHistoryLimit
   * @return successfulRunHistoryLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSuccessfulRunHistoryLimit() {
    return successfulRunHistoryLimit;
  }


  public void setSuccessfulRunHistoryLimit(Integer successfulRunHistoryLimit) {
    this.successfulRunHistoryLimit = successfulRunHistoryLimit;
  }


  public V1beta2ScheduledSparkApplicationSpec suspend(Boolean suspend) {
    
    this.suspend = suspend;
    return this;
  }

   /**
   * Get suspend
   * @return suspend
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSuspend() {
    return suspend;
  }


  public void setSuspend(Boolean suspend) {
    this.suspend = suspend;
  }


  public V1beta2ScheduledSparkApplicationSpec template(V1beta2ScheduledSparkApplicationSpecTemplate template) {
    
    this.template = template;
    return this;
  }

   /**
   * Get template
   * @return template
  **/
  @ApiModelProperty(required = true, value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplate getTemplate() {
    return template;
  }


  public void setTemplate(V1beta2ScheduledSparkApplicationSpecTemplate template) {
    this.template = template;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1beta2ScheduledSparkApplicationSpec v1beta2ScheduledSparkApplicationSpec = (V1beta2ScheduledSparkApplicationSpec) o;
    return Objects.equals(this.concurrencyPolicy, v1beta2ScheduledSparkApplicationSpec.concurrencyPolicy) &&
        Objects.equals(this.failedRunHistoryLimit, v1beta2ScheduledSparkApplicationSpec.failedRunHistoryLimit) &&
        Objects.equals(this.schedule, v1beta2ScheduledSparkApplicationSpec.schedule) &&
        Objects.equals(this.successfulRunHistoryLimit, v1beta2ScheduledSparkApplicationSpec.successfulRunHistoryLimit) &&
        Objects.equals(this.suspend, v1beta2ScheduledSparkApplicationSpec.suspend) &&
        Objects.equals(this.template, v1beta2ScheduledSparkApplicationSpec.template);
  }

  @Override
  public int hashCode() {
    return Objects.hash(concurrencyPolicy, failedRunHistoryLimit, schedule, successfulRunHistoryLimit, suspend, template);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1beta2ScheduledSparkApplicationSpec {\n");
    sb.append("    concurrencyPolicy: ").append(toIndentedString(concurrencyPolicy)).append("\n");
    sb.append("    failedRunHistoryLimit: ").append(toIndentedString(failedRunHistoryLimit)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    successfulRunHistoryLimit: ").append(toIndentedString(successfulRunHistoryLimit)).append("\n");
    sb.append("    suspend: ").append(toIndentedString(suspend)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

