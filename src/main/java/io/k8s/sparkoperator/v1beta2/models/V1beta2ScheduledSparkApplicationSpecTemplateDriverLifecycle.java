/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.22.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.k8s.sparkoperator.v1beta2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplateDriverLifecyclePostStart;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * V1beta2ScheduledSparkApplicationSpecTemplateDriverLifecycle
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-04-05T08:55:35.785Z[Etc/UTC]")
public class V1beta2ScheduledSparkApplicationSpecTemplateDriverLifecycle {
  public static final String SERIALIZED_NAME_POST_START = "postStart";
  @SerializedName(SERIALIZED_NAME_POST_START)
  private V1beta2ScheduledSparkApplicationSpecTemplateDriverLifecyclePostStart postStart;

  public static final String SERIALIZED_NAME_PRE_STOP = "preStop";
  @SerializedName(SERIALIZED_NAME_PRE_STOP)
  private V1beta2ScheduledSparkApplicationSpecTemplateDriverLifecyclePostStart preStop;


  public V1beta2ScheduledSparkApplicationSpecTemplateDriverLifecycle postStart(V1beta2ScheduledSparkApplicationSpecTemplateDriverLifecyclePostStart postStart) {
    
    this.postStart = postStart;
    return this;
  }

   /**
   * Get postStart
   * @return postStart
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplateDriverLifecyclePostStart getPostStart() {
    return postStart;
  }


  public void setPostStart(V1beta2ScheduledSparkApplicationSpecTemplateDriverLifecyclePostStart postStart) {
    this.postStart = postStart;
  }


  public V1beta2ScheduledSparkApplicationSpecTemplateDriverLifecycle preStop(V1beta2ScheduledSparkApplicationSpecTemplateDriverLifecyclePostStart preStop) {
    
    this.preStop = preStop;
    return this;
  }

   /**
   * Get preStop
   * @return preStop
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplateDriverLifecyclePostStart getPreStop() {
    return preStop;
  }


  public void setPreStop(V1beta2ScheduledSparkApplicationSpecTemplateDriverLifecyclePostStart preStop) {
    this.preStop = preStop;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1beta2ScheduledSparkApplicationSpecTemplateDriverLifecycle v1beta2ScheduledSparkApplicationSpecTemplateDriverLifecycle = (V1beta2ScheduledSparkApplicationSpecTemplateDriverLifecycle) o;
    return Objects.equals(this.postStart, v1beta2ScheduledSparkApplicationSpecTemplateDriverLifecycle.postStart) &&
        Objects.equals(this.preStop, v1beta2ScheduledSparkApplicationSpecTemplateDriverLifecycle.preStop);
  }

  @Override
  public int hashCode() {
    return Objects.hash(postStart, preStop);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1beta2ScheduledSparkApplicationSpecTemplateDriverLifecycle {\n");
    sb.append("    postStart: ").append(toIndentedString(postStart)).append("\n");
    sb.append("    preStop: ").append(toIndentedString(preStop)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

