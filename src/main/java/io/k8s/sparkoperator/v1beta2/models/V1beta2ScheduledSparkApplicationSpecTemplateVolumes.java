/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.22.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.k8s.sparkoperator.v1beta2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplateAwsElasticBlockStore;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplateAzureDisk;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplateAzureFile;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplateCephfs;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplateCinder;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplateConfigMap;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplateCsi;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplateDownwardAPI;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplateEmptyDir;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplateFc;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplateFlexVolume;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplateFlocker;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplateGcePersistentDisk;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplateGitRepo;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplateGlusterfs;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplateHostPath;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplateIscsi;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplateNfs;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplatePersistentVolumeClaim;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplatePhotonPersistentDisk;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplatePortworxVolume;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplateProjected;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplateQuobyte;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplateRbd;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplateScaleIO;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplateSecret;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplateStorageos;
import io.k8s.sparkoperator.v1beta2.models.V1beta2ScheduledSparkApplicationSpecTemplateVsphereVolume;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * V1beta2ScheduledSparkApplicationSpecTemplateVolumes
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-04-05T08:55:35.785Z[Etc/UTC]")
public class V1beta2ScheduledSparkApplicationSpecTemplateVolumes {
  public static final String SERIALIZED_NAME_AWS_ELASTIC_BLOCK_STORE = "awsElasticBlockStore";
  @SerializedName(SERIALIZED_NAME_AWS_ELASTIC_BLOCK_STORE)
  private V1beta2ScheduledSparkApplicationSpecTemplateAwsElasticBlockStore awsElasticBlockStore;

  public static final String SERIALIZED_NAME_AZURE_DISK = "azureDisk";
  @SerializedName(SERIALIZED_NAME_AZURE_DISK)
  private V1beta2ScheduledSparkApplicationSpecTemplateAzureDisk azureDisk;

  public static final String SERIALIZED_NAME_AZURE_FILE = "azureFile";
  @SerializedName(SERIALIZED_NAME_AZURE_FILE)
  private V1beta2ScheduledSparkApplicationSpecTemplateAzureFile azureFile;

  public static final String SERIALIZED_NAME_CEPHFS = "cephfs";
  @SerializedName(SERIALIZED_NAME_CEPHFS)
  private V1beta2ScheduledSparkApplicationSpecTemplateCephfs cephfs;

  public static final String SERIALIZED_NAME_CINDER = "cinder";
  @SerializedName(SERIALIZED_NAME_CINDER)
  private V1beta2ScheduledSparkApplicationSpecTemplateCinder cinder;

  public static final String SERIALIZED_NAME_CONFIG_MAP = "configMap";
  @SerializedName(SERIALIZED_NAME_CONFIG_MAP)
  private V1beta2ScheduledSparkApplicationSpecTemplateConfigMap configMap;

  public static final String SERIALIZED_NAME_CSI = "csi";
  @SerializedName(SERIALIZED_NAME_CSI)
  private V1beta2ScheduledSparkApplicationSpecTemplateCsi csi;

  public static final String SERIALIZED_NAME_DOWNWARD_A_P_I = "downwardAPI";
  @SerializedName(SERIALIZED_NAME_DOWNWARD_A_P_I)
  private V1beta2ScheduledSparkApplicationSpecTemplateDownwardAPI downwardAPI;

  public static final String SERIALIZED_NAME_EMPTY_DIR = "emptyDir";
  @SerializedName(SERIALIZED_NAME_EMPTY_DIR)
  private V1beta2ScheduledSparkApplicationSpecTemplateEmptyDir emptyDir;

  public static final String SERIALIZED_NAME_FC = "fc";
  @SerializedName(SERIALIZED_NAME_FC)
  private V1beta2ScheduledSparkApplicationSpecTemplateFc fc;

  public static final String SERIALIZED_NAME_FLEX_VOLUME = "flexVolume";
  @SerializedName(SERIALIZED_NAME_FLEX_VOLUME)
  private V1beta2ScheduledSparkApplicationSpecTemplateFlexVolume flexVolume;

  public static final String SERIALIZED_NAME_FLOCKER = "flocker";
  @SerializedName(SERIALIZED_NAME_FLOCKER)
  private V1beta2ScheduledSparkApplicationSpecTemplateFlocker flocker;

  public static final String SERIALIZED_NAME_GCE_PERSISTENT_DISK = "gcePersistentDisk";
  @SerializedName(SERIALIZED_NAME_GCE_PERSISTENT_DISK)
  private V1beta2ScheduledSparkApplicationSpecTemplateGcePersistentDisk gcePersistentDisk;

  public static final String SERIALIZED_NAME_GIT_REPO = "gitRepo";
  @SerializedName(SERIALIZED_NAME_GIT_REPO)
  private V1beta2ScheduledSparkApplicationSpecTemplateGitRepo gitRepo;

  public static final String SERIALIZED_NAME_GLUSTERFS = "glusterfs";
  @SerializedName(SERIALIZED_NAME_GLUSTERFS)
  private V1beta2ScheduledSparkApplicationSpecTemplateGlusterfs glusterfs;

  public static final String SERIALIZED_NAME_HOST_PATH = "hostPath";
  @SerializedName(SERIALIZED_NAME_HOST_PATH)
  private V1beta2ScheduledSparkApplicationSpecTemplateHostPath hostPath;

  public static final String SERIALIZED_NAME_ISCSI = "iscsi";
  @SerializedName(SERIALIZED_NAME_ISCSI)
  private V1beta2ScheduledSparkApplicationSpecTemplateIscsi iscsi;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NFS = "nfs";
  @SerializedName(SERIALIZED_NAME_NFS)
  private V1beta2ScheduledSparkApplicationSpecTemplateNfs nfs;

  public static final String SERIALIZED_NAME_PERSISTENT_VOLUME_CLAIM = "persistentVolumeClaim";
  @SerializedName(SERIALIZED_NAME_PERSISTENT_VOLUME_CLAIM)
  private V1beta2ScheduledSparkApplicationSpecTemplatePersistentVolumeClaim persistentVolumeClaim;

  public static final String SERIALIZED_NAME_PHOTON_PERSISTENT_DISK = "photonPersistentDisk";
  @SerializedName(SERIALIZED_NAME_PHOTON_PERSISTENT_DISK)
  private V1beta2ScheduledSparkApplicationSpecTemplatePhotonPersistentDisk photonPersistentDisk;

  public static final String SERIALIZED_NAME_PORTWORX_VOLUME = "portworxVolume";
  @SerializedName(SERIALIZED_NAME_PORTWORX_VOLUME)
  private V1beta2ScheduledSparkApplicationSpecTemplatePortworxVolume portworxVolume;

  public static final String SERIALIZED_NAME_PROJECTED = "projected";
  @SerializedName(SERIALIZED_NAME_PROJECTED)
  private V1beta2ScheduledSparkApplicationSpecTemplateProjected projected;

  public static final String SERIALIZED_NAME_QUOBYTE = "quobyte";
  @SerializedName(SERIALIZED_NAME_QUOBYTE)
  private V1beta2ScheduledSparkApplicationSpecTemplateQuobyte quobyte;

  public static final String SERIALIZED_NAME_RBD = "rbd";
  @SerializedName(SERIALIZED_NAME_RBD)
  private V1beta2ScheduledSparkApplicationSpecTemplateRbd rbd;

  public static final String SERIALIZED_NAME_SCALE_I_O = "scaleIO";
  @SerializedName(SERIALIZED_NAME_SCALE_I_O)
  private V1beta2ScheduledSparkApplicationSpecTemplateScaleIO scaleIO;

  public static final String SERIALIZED_NAME_SECRET = "secret";
  @SerializedName(SERIALIZED_NAME_SECRET)
  private V1beta2ScheduledSparkApplicationSpecTemplateSecret secret;

  public static final String SERIALIZED_NAME_STORAGEOS = "storageos";
  @SerializedName(SERIALIZED_NAME_STORAGEOS)
  private V1beta2ScheduledSparkApplicationSpecTemplateStorageos storageos;

  public static final String SERIALIZED_NAME_VSPHERE_VOLUME = "vsphereVolume";
  @SerializedName(SERIALIZED_NAME_VSPHERE_VOLUME)
  private V1beta2ScheduledSparkApplicationSpecTemplateVsphereVolume vsphereVolume;


  public V1beta2ScheduledSparkApplicationSpecTemplateVolumes awsElasticBlockStore(V1beta2ScheduledSparkApplicationSpecTemplateAwsElasticBlockStore awsElasticBlockStore) {
    
    this.awsElasticBlockStore = awsElasticBlockStore;
    return this;
  }

   /**
   * Get awsElasticBlockStore
   * @return awsElasticBlockStore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplateAwsElasticBlockStore getAwsElasticBlockStore() {
    return awsElasticBlockStore;
  }


  public void setAwsElasticBlockStore(V1beta2ScheduledSparkApplicationSpecTemplateAwsElasticBlockStore awsElasticBlockStore) {
    this.awsElasticBlockStore = awsElasticBlockStore;
  }


  public V1beta2ScheduledSparkApplicationSpecTemplateVolumes azureDisk(V1beta2ScheduledSparkApplicationSpecTemplateAzureDisk azureDisk) {
    
    this.azureDisk = azureDisk;
    return this;
  }

   /**
   * Get azureDisk
   * @return azureDisk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplateAzureDisk getAzureDisk() {
    return azureDisk;
  }


  public void setAzureDisk(V1beta2ScheduledSparkApplicationSpecTemplateAzureDisk azureDisk) {
    this.azureDisk = azureDisk;
  }


  public V1beta2ScheduledSparkApplicationSpecTemplateVolumes azureFile(V1beta2ScheduledSparkApplicationSpecTemplateAzureFile azureFile) {
    
    this.azureFile = azureFile;
    return this;
  }

   /**
   * Get azureFile
   * @return azureFile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplateAzureFile getAzureFile() {
    return azureFile;
  }


  public void setAzureFile(V1beta2ScheduledSparkApplicationSpecTemplateAzureFile azureFile) {
    this.azureFile = azureFile;
  }


  public V1beta2ScheduledSparkApplicationSpecTemplateVolumes cephfs(V1beta2ScheduledSparkApplicationSpecTemplateCephfs cephfs) {
    
    this.cephfs = cephfs;
    return this;
  }

   /**
   * Get cephfs
   * @return cephfs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplateCephfs getCephfs() {
    return cephfs;
  }


  public void setCephfs(V1beta2ScheduledSparkApplicationSpecTemplateCephfs cephfs) {
    this.cephfs = cephfs;
  }


  public V1beta2ScheduledSparkApplicationSpecTemplateVolumes cinder(V1beta2ScheduledSparkApplicationSpecTemplateCinder cinder) {
    
    this.cinder = cinder;
    return this;
  }

   /**
   * Get cinder
   * @return cinder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplateCinder getCinder() {
    return cinder;
  }


  public void setCinder(V1beta2ScheduledSparkApplicationSpecTemplateCinder cinder) {
    this.cinder = cinder;
  }


  public V1beta2ScheduledSparkApplicationSpecTemplateVolumes configMap(V1beta2ScheduledSparkApplicationSpecTemplateConfigMap configMap) {
    
    this.configMap = configMap;
    return this;
  }

   /**
   * Get configMap
   * @return configMap
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplateConfigMap getConfigMap() {
    return configMap;
  }


  public void setConfigMap(V1beta2ScheduledSparkApplicationSpecTemplateConfigMap configMap) {
    this.configMap = configMap;
  }


  public V1beta2ScheduledSparkApplicationSpecTemplateVolumes csi(V1beta2ScheduledSparkApplicationSpecTemplateCsi csi) {
    
    this.csi = csi;
    return this;
  }

   /**
   * Get csi
   * @return csi
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplateCsi getCsi() {
    return csi;
  }


  public void setCsi(V1beta2ScheduledSparkApplicationSpecTemplateCsi csi) {
    this.csi = csi;
  }


  public V1beta2ScheduledSparkApplicationSpecTemplateVolumes downwardAPI(V1beta2ScheduledSparkApplicationSpecTemplateDownwardAPI downwardAPI) {
    
    this.downwardAPI = downwardAPI;
    return this;
  }

   /**
   * Get downwardAPI
   * @return downwardAPI
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplateDownwardAPI getDownwardAPI() {
    return downwardAPI;
  }


  public void setDownwardAPI(V1beta2ScheduledSparkApplicationSpecTemplateDownwardAPI downwardAPI) {
    this.downwardAPI = downwardAPI;
  }


  public V1beta2ScheduledSparkApplicationSpecTemplateVolumes emptyDir(V1beta2ScheduledSparkApplicationSpecTemplateEmptyDir emptyDir) {
    
    this.emptyDir = emptyDir;
    return this;
  }

   /**
   * Get emptyDir
   * @return emptyDir
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplateEmptyDir getEmptyDir() {
    return emptyDir;
  }


  public void setEmptyDir(V1beta2ScheduledSparkApplicationSpecTemplateEmptyDir emptyDir) {
    this.emptyDir = emptyDir;
  }


  public V1beta2ScheduledSparkApplicationSpecTemplateVolumes fc(V1beta2ScheduledSparkApplicationSpecTemplateFc fc) {
    
    this.fc = fc;
    return this;
  }

   /**
   * Get fc
   * @return fc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplateFc getFc() {
    return fc;
  }


  public void setFc(V1beta2ScheduledSparkApplicationSpecTemplateFc fc) {
    this.fc = fc;
  }


  public V1beta2ScheduledSparkApplicationSpecTemplateVolumes flexVolume(V1beta2ScheduledSparkApplicationSpecTemplateFlexVolume flexVolume) {
    
    this.flexVolume = flexVolume;
    return this;
  }

   /**
   * Get flexVolume
   * @return flexVolume
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplateFlexVolume getFlexVolume() {
    return flexVolume;
  }


  public void setFlexVolume(V1beta2ScheduledSparkApplicationSpecTemplateFlexVolume flexVolume) {
    this.flexVolume = flexVolume;
  }


  public V1beta2ScheduledSparkApplicationSpecTemplateVolumes flocker(V1beta2ScheduledSparkApplicationSpecTemplateFlocker flocker) {
    
    this.flocker = flocker;
    return this;
  }

   /**
   * Get flocker
   * @return flocker
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplateFlocker getFlocker() {
    return flocker;
  }


  public void setFlocker(V1beta2ScheduledSparkApplicationSpecTemplateFlocker flocker) {
    this.flocker = flocker;
  }


  public V1beta2ScheduledSparkApplicationSpecTemplateVolumes gcePersistentDisk(V1beta2ScheduledSparkApplicationSpecTemplateGcePersistentDisk gcePersistentDisk) {
    
    this.gcePersistentDisk = gcePersistentDisk;
    return this;
  }

   /**
   * Get gcePersistentDisk
   * @return gcePersistentDisk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplateGcePersistentDisk getGcePersistentDisk() {
    return gcePersistentDisk;
  }


  public void setGcePersistentDisk(V1beta2ScheduledSparkApplicationSpecTemplateGcePersistentDisk gcePersistentDisk) {
    this.gcePersistentDisk = gcePersistentDisk;
  }


  public V1beta2ScheduledSparkApplicationSpecTemplateVolumes gitRepo(V1beta2ScheduledSparkApplicationSpecTemplateGitRepo gitRepo) {
    
    this.gitRepo = gitRepo;
    return this;
  }

   /**
   * Get gitRepo
   * @return gitRepo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplateGitRepo getGitRepo() {
    return gitRepo;
  }


  public void setGitRepo(V1beta2ScheduledSparkApplicationSpecTemplateGitRepo gitRepo) {
    this.gitRepo = gitRepo;
  }


  public V1beta2ScheduledSparkApplicationSpecTemplateVolumes glusterfs(V1beta2ScheduledSparkApplicationSpecTemplateGlusterfs glusterfs) {
    
    this.glusterfs = glusterfs;
    return this;
  }

   /**
   * Get glusterfs
   * @return glusterfs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplateGlusterfs getGlusterfs() {
    return glusterfs;
  }


  public void setGlusterfs(V1beta2ScheduledSparkApplicationSpecTemplateGlusterfs glusterfs) {
    this.glusterfs = glusterfs;
  }


  public V1beta2ScheduledSparkApplicationSpecTemplateVolumes hostPath(V1beta2ScheduledSparkApplicationSpecTemplateHostPath hostPath) {
    
    this.hostPath = hostPath;
    return this;
  }

   /**
   * Get hostPath
   * @return hostPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplateHostPath getHostPath() {
    return hostPath;
  }


  public void setHostPath(V1beta2ScheduledSparkApplicationSpecTemplateHostPath hostPath) {
    this.hostPath = hostPath;
  }


  public V1beta2ScheduledSparkApplicationSpecTemplateVolumes iscsi(V1beta2ScheduledSparkApplicationSpecTemplateIscsi iscsi) {
    
    this.iscsi = iscsi;
    return this;
  }

   /**
   * Get iscsi
   * @return iscsi
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplateIscsi getIscsi() {
    return iscsi;
  }


  public void setIscsi(V1beta2ScheduledSparkApplicationSpecTemplateIscsi iscsi) {
    this.iscsi = iscsi;
  }


  public V1beta2ScheduledSparkApplicationSpecTemplateVolumes name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public V1beta2ScheduledSparkApplicationSpecTemplateVolumes nfs(V1beta2ScheduledSparkApplicationSpecTemplateNfs nfs) {
    
    this.nfs = nfs;
    return this;
  }

   /**
   * Get nfs
   * @return nfs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplateNfs getNfs() {
    return nfs;
  }


  public void setNfs(V1beta2ScheduledSparkApplicationSpecTemplateNfs nfs) {
    this.nfs = nfs;
  }


  public V1beta2ScheduledSparkApplicationSpecTemplateVolumes persistentVolumeClaim(V1beta2ScheduledSparkApplicationSpecTemplatePersistentVolumeClaim persistentVolumeClaim) {
    
    this.persistentVolumeClaim = persistentVolumeClaim;
    return this;
  }

   /**
   * Get persistentVolumeClaim
   * @return persistentVolumeClaim
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplatePersistentVolumeClaim getPersistentVolumeClaim() {
    return persistentVolumeClaim;
  }


  public void setPersistentVolumeClaim(V1beta2ScheduledSparkApplicationSpecTemplatePersistentVolumeClaim persistentVolumeClaim) {
    this.persistentVolumeClaim = persistentVolumeClaim;
  }


  public V1beta2ScheduledSparkApplicationSpecTemplateVolumes photonPersistentDisk(V1beta2ScheduledSparkApplicationSpecTemplatePhotonPersistentDisk photonPersistentDisk) {
    
    this.photonPersistentDisk = photonPersistentDisk;
    return this;
  }

   /**
   * Get photonPersistentDisk
   * @return photonPersistentDisk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplatePhotonPersistentDisk getPhotonPersistentDisk() {
    return photonPersistentDisk;
  }


  public void setPhotonPersistentDisk(V1beta2ScheduledSparkApplicationSpecTemplatePhotonPersistentDisk photonPersistentDisk) {
    this.photonPersistentDisk = photonPersistentDisk;
  }


  public V1beta2ScheduledSparkApplicationSpecTemplateVolumes portworxVolume(V1beta2ScheduledSparkApplicationSpecTemplatePortworxVolume portworxVolume) {
    
    this.portworxVolume = portworxVolume;
    return this;
  }

   /**
   * Get portworxVolume
   * @return portworxVolume
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplatePortworxVolume getPortworxVolume() {
    return portworxVolume;
  }


  public void setPortworxVolume(V1beta2ScheduledSparkApplicationSpecTemplatePortworxVolume portworxVolume) {
    this.portworxVolume = portworxVolume;
  }


  public V1beta2ScheduledSparkApplicationSpecTemplateVolumes projected(V1beta2ScheduledSparkApplicationSpecTemplateProjected projected) {
    
    this.projected = projected;
    return this;
  }

   /**
   * Get projected
   * @return projected
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplateProjected getProjected() {
    return projected;
  }


  public void setProjected(V1beta2ScheduledSparkApplicationSpecTemplateProjected projected) {
    this.projected = projected;
  }


  public V1beta2ScheduledSparkApplicationSpecTemplateVolumes quobyte(V1beta2ScheduledSparkApplicationSpecTemplateQuobyte quobyte) {
    
    this.quobyte = quobyte;
    return this;
  }

   /**
   * Get quobyte
   * @return quobyte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplateQuobyte getQuobyte() {
    return quobyte;
  }


  public void setQuobyte(V1beta2ScheduledSparkApplicationSpecTemplateQuobyte quobyte) {
    this.quobyte = quobyte;
  }


  public V1beta2ScheduledSparkApplicationSpecTemplateVolumes rbd(V1beta2ScheduledSparkApplicationSpecTemplateRbd rbd) {
    
    this.rbd = rbd;
    return this;
  }

   /**
   * Get rbd
   * @return rbd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplateRbd getRbd() {
    return rbd;
  }


  public void setRbd(V1beta2ScheduledSparkApplicationSpecTemplateRbd rbd) {
    this.rbd = rbd;
  }


  public V1beta2ScheduledSparkApplicationSpecTemplateVolumes scaleIO(V1beta2ScheduledSparkApplicationSpecTemplateScaleIO scaleIO) {
    
    this.scaleIO = scaleIO;
    return this;
  }

   /**
   * Get scaleIO
   * @return scaleIO
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplateScaleIO getScaleIO() {
    return scaleIO;
  }


  public void setScaleIO(V1beta2ScheduledSparkApplicationSpecTemplateScaleIO scaleIO) {
    this.scaleIO = scaleIO;
  }


  public V1beta2ScheduledSparkApplicationSpecTemplateVolumes secret(V1beta2ScheduledSparkApplicationSpecTemplateSecret secret) {
    
    this.secret = secret;
    return this;
  }

   /**
   * Get secret
   * @return secret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplateSecret getSecret() {
    return secret;
  }


  public void setSecret(V1beta2ScheduledSparkApplicationSpecTemplateSecret secret) {
    this.secret = secret;
  }


  public V1beta2ScheduledSparkApplicationSpecTemplateVolumes storageos(V1beta2ScheduledSparkApplicationSpecTemplateStorageos storageos) {
    
    this.storageos = storageos;
    return this;
  }

   /**
   * Get storageos
   * @return storageos
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplateStorageos getStorageos() {
    return storageos;
  }


  public void setStorageos(V1beta2ScheduledSparkApplicationSpecTemplateStorageos storageos) {
    this.storageos = storageos;
  }


  public V1beta2ScheduledSparkApplicationSpecTemplateVolumes vsphereVolume(V1beta2ScheduledSparkApplicationSpecTemplateVsphereVolume vsphereVolume) {
    
    this.vsphereVolume = vsphereVolume;
    return this;
  }

   /**
   * Get vsphereVolume
   * @return vsphereVolume
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta2ScheduledSparkApplicationSpecTemplateVsphereVolume getVsphereVolume() {
    return vsphereVolume;
  }


  public void setVsphereVolume(V1beta2ScheduledSparkApplicationSpecTemplateVsphereVolume vsphereVolume) {
    this.vsphereVolume = vsphereVolume;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1beta2ScheduledSparkApplicationSpecTemplateVolumes v1beta2ScheduledSparkApplicationSpecTemplateVolumes = (V1beta2ScheduledSparkApplicationSpecTemplateVolumes) o;
    return Objects.equals(this.awsElasticBlockStore, v1beta2ScheduledSparkApplicationSpecTemplateVolumes.awsElasticBlockStore) &&
        Objects.equals(this.azureDisk, v1beta2ScheduledSparkApplicationSpecTemplateVolumes.azureDisk) &&
        Objects.equals(this.azureFile, v1beta2ScheduledSparkApplicationSpecTemplateVolumes.azureFile) &&
        Objects.equals(this.cephfs, v1beta2ScheduledSparkApplicationSpecTemplateVolumes.cephfs) &&
        Objects.equals(this.cinder, v1beta2ScheduledSparkApplicationSpecTemplateVolumes.cinder) &&
        Objects.equals(this.configMap, v1beta2ScheduledSparkApplicationSpecTemplateVolumes.configMap) &&
        Objects.equals(this.csi, v1beta2ScheduledSparkApplicationSpecTemplateVolumes.csi) &&
        Objects.equals(this.downwardAPI, v1beta2ScheduledSparkApplicationSpecTemplateVolumes.downwardAPI) &&
        Objects.equals(this.emptyDir, v1beta2ScheduledSparkApplicationSpecTemplateVolumes.emptyDir) &&
        Objects.equals(this.fc, v1beta2ScheduledSparkApplicationSpecTemplateVolumes.fc) &&
        Objects.equals(this.flexVolume, v1beta2ScheduledSparkApplicationSpecTemplateVolumes.flexVolume) &&
        Objects.equals(this.flocker, v1beta2ScheduledSparkApplicationSpecTemplateVolumes.flocker) &&
        Objects.equals(this.gcePersistentDisk, v1beta2ScheduledSparkApplicationSpecTemplateVolumes.gcePersistentDisk) &&
        Objects.equals(this.gitRepo, v1beta2ScheduledSparkApplicationSpecTemplateVolumes.gitRepo) &&
        Objects.equals(this.glusterfs, v1beta2ScheduledSparkApplicationSpecTemplateVolumes.glusterfs) &&
        Objects.equals(this.hostPath, v1beta2ScheduledSparkApplicationSpecTemplateVolumes.hostPath) &&
        Objects.equals(this.iscsi, v1beta2ScheduledSparkApplicationSpecTemplateVolumes.iscsi) &&
        Objects.equals(this.name, v1beta2ScheduledSparkApplicationSpecTemplateVolumes.name) &&
        Objects.equals(this.nfs, v1beta2ScheduledSparkApplicationSpecTemplateVolumes.nfs) &&
        Objects.equals(this.persistentVolumeClaim, v1beta2ScheduledSparkApplicationSpecTemplateVolumes.persistentVolumeClaim) &&
        Objects.equals(this.photonPersistentDisk, v1beta2ScheduledSparkApplicationSpecTemplateVolumes.photonPersistentDisk) &&
        Objects.equals(this.portworxVolume, v1beta2ScheduledSparkApplicationSpecTemplateVolumes.portworxVolume) &&
        Objects.equals(this.projected, v1beta2ScheduledSparkApplicationSpecTemplateVolumes.projected) &&
        Objects.equals(this.quobyte, v1beta2ScheduledSparkApplicationSpecTemplateVolumes.quobyte) &&
        Objects.equals(this.rbd, v1beta2ScheduledSparkApplicationSpecTemplateVolumes.rbd) &&
        Objects.equals(this.scaleIO, v1beta2ScheduledSparkApplicationSpecTemplateVolumes.scaleIO) &&
        Objects.equals(this.secret, v1beta2ScheduledSparkApplicationSpecTemplateVolumes.secret) &&
        Objects.equals(this.storageos, v1beta2ScheduledSparkApplicationSpecTemplateVolumes.storageos) &&
        Objects.equals(this.vsphereVolume, v1beta2ScheduledSparkApplicationSpecTemplateVolumes.vsphereVolume);
  }

  @Override
  public int hashCode() {
    return Objects.hash(awsElasticBlockStore, azureDisk, azureFile, cephfs, cinder, configMap, csi, downwardAPI, emptyDir, fc, flexVolume, flocker, gcePersistentDisk, gitRepo, glusterfs, hostPath, iscsi, name, nfs, persistentVolumeClaim, photonPersistentDisk, portworxVolume, projected, quobyte, rbd, scaleIO, secret, storageos, vsphereVolume);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1beta2ScheduledSparkApplicationSpecTemplateVolumes {\n");
    sb.append("    awsElasticBlockStore: ").append(toIndentedString(awsElasticBlockStore)).append("\n");
    sb.append("    azureDisk: ").append(toIndentedString(azureDisk)).append("\n");
    sb.append("    azureFile: ").append(toIndentedString(azureFile)).append("\n");
    sb.append("    cephfs: ").append(toIndentedString(cephfs)).append("\n");
    sb.append("    cinder: ").append(toIndentedString(cinder)).append("\n");
    sb.append("    configMap: ").append(toIndentedString(configMap)).append("\n");
    sb.append("    csi: ").append(toIndentedString(csi)).append("\n");
    sb.append("    downwardAPI: ").append(toIndentedString(downwardAPI)).append("\n");
    sb.append("    emptyDir: ").append(toIndentedString(emptyDir)).append("\n");
    sb.append("    fc: ").append(toIndentedString(fc)).append("\n");
    sb.append("    flexVolume: ").append(toIndentedString(flexVolume)).append("\n");
    sb.append("    flocker: ").append(toIndentedString(flocker)).append("\n");
    sb.append("    gcePersistentDisk: ").append(toIndentedString(gcePersistentDisk)).append("\n");
    sb.append("    gitRepo: ").append(toIndentedString(gitRepo)).append("\n");
    sb.append("    glusterfs: ").append(toIndentedString(glusterfs)).append("\n");
    sb.append("    hostPath: ").append(toIndentedString(hostPath)).append("\n");
    sb.append("    iscsi: ").append(toIndentedString(iscsi)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nfs: ").append(toIndentedString(nfs)).append("\n");
    sb.append("    persistentVolumeClaim: ").append(toIndentedString(persistentVolumeClaim)).append("\n");
    sb.append("    photonPersistentDisk: ").append(toIndentedString(photonPersistentDisk)).append("\n");
    sb.append("    portworxVolume: ").append(toIndentedString(portworxVolume)).append("\n");
    sb.append("    projected: ").append(toIndentedString(projected)).append("\n");
    sb.append("    quobyte: ").append(toIndentedString(quobyte)).append("\n");
    sb.append("    rbd: ").append(toIndentedString(rbd)).append("\n");
    sb.append("    scaleIO: ").append(toIndentedString(scaleIO)).append("\n");
    sb.append("    secret: ").append(toIndentedString(secret)).append("\n");
    sb.append("    storageos: ").append(toIndentedString(storageos)).append("\n");
    sb.append("    vsphereVolume: ").append(toIndentedString(vsphereVolume)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

